Script started on 2024-10-08 06:19:23+00:00 [TERM="xterm" TTY="/dev/pts/0" COLUMNS="120" LINES="30"]
# mongosh --host localhost --port 27017 -u "root" -p "example" --authenticationDatabase "the_database"
]0;mongosh mongodb://<credentials>@localhost:27017/?directConnection=true&serverSelectionTimeoutMS=2000&authSource=the_databaseCurrent Mongosh Log ID:	6704cef45d338cd967964032
Connecting to:		[1m[32mmongodb://<credentials>@localhost:27017/?directConnection=true&serverSelectionTimeoutMS=2000&authSource=the_database&appName=mongosh+2.3.1[0m
MongoServerError: Authentication failed.
# use the_database
sh: 2: use: not found
# mongosh --host localhost --port 27017 -u "root" -p "example"
]0;mongosh mongodb://<credentials>@localhost:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	6704cf0c28eb94be5c964032
Connecting to:		[1m[32mmongodb://<credentials>@localhost:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.3.1[0m
Using MongoDB:		8.0.0
[1m[33mUsing Mongosh[0m:		2.3.1

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

[1G[0J [1G[1m[33m------[0m
   [1m[33mThe server generated these startup warnings when booting[0m
   2024-10-08T06:18:10.892+00:00: For customers running the updated tcmalloc-google memory allocator, we suggest setting the contents of sysfsFile to 'defer+madvise'
   2024-10-08T06:18:10.892+00:00: We suggest setting the contents of sysfsFile to 0.
   2024-10-08T06:18:10.892+00:00: Your system has glibc support for rseq built in, which is not yet supported by tcmalloc-google and has critical performance implications. Please set the environment variable GLIBC_TUNABLES=glibc.pthread.rseq=0
   2024-10-08T06:18:10.892+00:00: vm.max_map_count is too low
   2024-10-08T06:18:10.892+00:00: We suggest setting swappiness to 0 or 1, as swapping can cause performance problems.
[1m[33m------[0m

[1G[0Jtest> [7G[1G[0Jtest> db.todos.find({})[24G[1G[0Jtest> db.todos.insertOne({[33mtext[39m: [32m'Use CLI third time'[39m, [33mdone[39m: [33mfalse[39m})[68G[1G[0Jtest> db.todos.find({})[24G[1G[0Jtest> [7Guser t[1G[0Jtest> user [12G[1G[0Jtest> user[11G[1G[0Jtest> use[10G the_database
switched to db the_database
[1G[0Jthe_database> [15Gdb.todos.find({})
[
  {
    _id: ObjectId([32m'6703e8dd8b14fd9bbb964033'[39m),
    text: [32m'Write code'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'6703e8dd8b14fd9bbb964034'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'6704cb29acd483209b964033'[39m),
    text: [32m'Use CLI'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'6704cbf26acb6f33c8964033'[39m),
    text: [32m'Use CLI second time'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'6704ccd0c50c75d673964033'[39m),
    text: [32m'Use CLI third time'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gdb.todos.insertOne({ text[33mtext[39m: [32m'[39m[32mU[39m[32ms[39m[32me[39m [32mC[39m[32mL[39m[32mI[39m [32mf[39m[32mi[39m[32mf[39m[32mt[39m[32mh[39m [32mt[39m[32mi[39m[32mm[39m[32me[39m [32mt[39m[32mo[39m [32mg[39m[32me[39m[32mt[39m [32mb[39m[32mo[39m[32mt[39m[32mh[39m [32mw[39m[32mi[39m[32mn[39m[32md[39m[32mo[39m[32mw[39m[32ms[39m [32ma[39m[32mn[39m[32md[39m [32mL[39m[32mi[39m[32mn[39m[32mu[39m[32mx[39m [32mc[39m[32mo[39m[32mm[39m[32mm[39m[32ma[39m[32mn[39m[32md[39m[32ms[39m [32ml[39m[32mo[39m[32mg[39m[32mg[39m[32me[39m[32md[39m[32m'[39m, d[36mdo[39mdone: fals[1G[0Jthe_database> db.todos.insertOne({ [33mtext[39m: [32m'Use CLI fifth time to get both windows and Linux commands logged'[39m, [33mdone[39m: [33mfalse[39m [1G })
{
  acknowledged: [33mtrue[39m,
  insertedId: ObjectId([32m'6704cf2528eb94be5c964033'[39m)
}
[1G[0Jthe_database> [15Gdb.todos.find({})
[
  {
    _id: ObjectId([32m'6703e8dd8b14fd9bbb964033'[39m),
    text: [32m'Write code'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'6703e8dd8b14fd9bbb964034'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'6704cb29acd483209b964033'[39m),
    text: [32m'Use CLI'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'6704cbf26acb6f33c8964033'[39m),
    text: [32m'Use CLI second time'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'6704ccd0c50c75d673964033'[39m),
    text: [32m'Use CLI third time'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'6704cf2528eb94be5c964033'[39m),
    text: [32m'Use CLI fifth time to get both windows and Linux commands logged'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gexit
# exit

Script done on 2024-10-08 06:20:39+00:00 [COMMAND_EXIT_CODE="0"]
